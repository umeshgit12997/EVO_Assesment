/**
 * Minified by jsDelivr using UglifyJS v3.1.10.
 * Original file: /npm/jquery-circliful@0.1.1/js/jquery.circliful.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
! function(e) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], function(t) {
        return e(t, window, document)
    }) : "object" == typeof exports ? module.exports = function(t, r) {
        return t || (t = window), r || (r = "undefined" != typeof window ? require("jquery") : require("jquery")(t)), e(r, t, t.document)
    } : e(jQuery, window, document)
}(function(e, t, r, o) {
    "use strict";
    e.fn.circliful = function(r, o) {
        var n = e.extend({
            foregroundColor: "#0795C5 ",
            backgroundColor: "#d9d9d9",
            pointColor: "none",
            fillColor: "none",
            foregroundBorderWidth: 15,
            backgroundBorderWidth: 15,
            pointSize: 5,
            fontColor: "#0795C5",
            percent: 75,
            animation: 1,
            animationStep: 5,
            icon: "none",
            iconSize: "10",
            iconColor: "#ccc",
            iconPosition: "top",
            target: 0,
            start: 0,
            showPercent: 1,
            percentageTextSize: 30,
            textAdditionalCss: "",
            targetPercent: 0,
            targetTextSize: 5,
            targetColor: "#0795C5",
            text: null,
            textStyle: " ",
            textColor: "#BCBCBC",
            multiPercentage: 0,
            percentages: null,
            textBelow: !1,
            noPercentageSign: !1,
            replacePercentageByText: null,
            halfCircle: !1,
            animateInView: !1,
            decimals: 0,
            alwaysDecimals: !1
        }, r);
        return this.each(function() {
            function r() {
                var e = t.setInterval(function() {
                    m >= B ? (t.clearInterval(e), k = 1, "function" == typeof o && o.call(this)) : (m += C, w += P), m / 3.6 >= s && 1 == k && (m = 3.6 * s), w > n.target && 1 == k && (w = n.target), null == n.replacePercentageByText && (b = (b = n.halfCircle ? parseFloat(100 * m / 360 * 2) : parseFloat(100 * m / 360)).toFixed(n.decimals), !n.alwaysDecimals && (0 == s || s > 1 && 1 != k) && (b = parseInt(b))), y.attr("stroke-dasharray", m + ", 20000"), 1 == n.showPercent ? p.find(".number").text(b) : (p.find(".number").text(w), p.find(".percent").text(""))
                }.bind(y), h)
            }

            function l() {
                y.hasClass("start") || function() {
                    var r = -1 != navigator.userAgent.toLowerCase().indexOf("webkit") ? "body" : "html",
                        o = e(r).scrollTop(),
                        n = o + e(t).height(),
                        l = Math.round(y.offset().top),
                        a = l + y.height();
                    return l < n && a > o
                }() && (y.addClass("start"), setTimeout(r, 250))
            }
            var a = e(this);
            ! function(t, r) {
                e.each(t, function(e, o) {
                    e.toLowerCase() in r && (t[e] = r[e.toLowerCase()])
                })
            }(n, a.data());
            var i, c, s = n.percent,
                d = 83,
                x = 100,
                f = 100,
                g = 100,
                u = n.backgroundBorderWidth;
            if (n.halfCircle ? "left" == n.iconPosition ? (x = 80, d = 100, g = 117, f = 100) : n.halfCircle && (d = 80, f = 100) : "bottom" == n.iconPosition ? (d = 124, f = 95) : "left" == n.iconPosition ? (x = 80, d = 110, g = 117) : "middle" == n.iconPosition ? 1 == n.multiPercentage ? "object" == typeof n.percentages ? u = 30 : (d = 110, i = '<g stroke="' + ("none" != n.backgroundColor ? n.backgroundColor : "#ccc") + '" ><line x1="133" y1="50" x2="140" y2="40" stroke-width="2"  /></g>', i += '<g stroke="' + ("none" != n.backgroundColor ? n.backgroundColor : "#ccc") + '" ><line x1="140" y1="40" x2="200" y2="40" stroke-width="2"  /></g>', g = 228, f = 47) : (d = 110, i = '<g stroke="' + ("none" != n.backgroundColor ? n.backgroundColor : "#ccc") + '" ><line x1="133" y1="50" x2="140" y2="40" stroke-width="2"  /></g>', i += '<g stroke="' + ("none" != n.backgroundColor ? n.backgroundColor : "#ccc") + '" ><line x1="140" y1="40" x2="200" y2="40" stroke-width="2"  /></g>', g = 170, f = 35) : "right" == n.iconPosition && (x = 120, d = 110, g = 80), n.targetPercent > 0 && (f = 95, i = '<g stroke="' + ("none" != n.backgroundColor ? n.backgroundColor : "#ccc") + '" ><line x1="75" y1="101" x2="125" y2="101" stroke-width="1"  /></g>', i += '<text text-anchor="middle" x="' + g + '" y="120" style="font-size: ' + n.targetTextSize + 'px;" fill="' + n.targetColor + '">' + n.targetPercent + (n.noPercentageSign && null == n.replacePercentageByText ? "" : "") + "</text>", i += '<circle cx="100" cy="100" r="69" fill="none" stroke="' + n.backgroundColor + '" stroke-width="3" stroke-dasharray="450" transform="rotate(-90,100,100)" />', i += '<circle cx="100" cy="100" r="69" fill="none" stroke="' + n.targetColor + '" stroke-width="3" stroke-dasharray="' + 3.6 * n.targetPercent + ', 20000" transform="rotate(-90,100,100)" />'), null != n.text && (n.halfCircle ? n.textBelow ? i += '<text text-anchor="middle" x="100" y="120" style="' + n.textStyle + '" fill="' + n.textColor + '">' + n.text + "</text>" : 0 == n.multiPercentage ? i += '<text text-anchor="middle" x="100" y="115" style="' + n.textStyle + '" fill="' + n.textColor + '">' + n.text + "</text>" : 1 == n.multiPercentage && (i += '<text text-anchor="middle" x="228" y="65" style="' + n.textStyle + '" fill="' + n.textColor + '">' + n.text + "</text>") : n.textBelow ? i += '<text text-anchor="middle" x="100" y="190" style="' + n.textStyle + '" fill="' + n.textColor + '">' + n.text + "</text>" : 0 == n.multiPercentage ? i += '<text text-anchor="middle" x="100" y="115" style="' + n.textStyle + '" fill="' + n.textColor + '">' + n.text + "</text>" : 1 == n.multiPercentage && (i += '<text text-anchor="middle" x="228" y="65" style="' + n.textStyle + '" fill="' + n.textColor + '">' + n.text + "</text>")), "none" != n.icon && (c = '<text text-anchor="middle" x="' + x + '" y="' + d + '" class="icon" style="font-size: ' + n.iconSize + 'px" fill="' + n.iconColor + '">&#x' + n.icon + "</text>"), n.halfCircle) {
                a.addClass("svg-container").append(e('<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 194 186" class="circliful">' + i + '<clipPath id="cut-off-bottom"> <rect x="100" y="0" width="100" height="200" /> </clipPath><circle cx="100" cy="100" r="57" class="border" fill="' + n.fillColor + '" stroke="' + n.backgroundColor + '" stroke-width="' + u + '" stroke-dasharray="360" clip-path="url(#cut-off-bottom)" transform="rotate(-90,100,100)" /><circle class="circle" cx="100" cy="100" r="57" class="border" fill="none" stroke="' + n.foregroundColor + '" stroke-width="' + n.foregroundBorderWidth + '" stroke-dasharray="0,20000" transform="rotate(-180,100,100)" /><circle cx="100" cy="100" r="' + n.pointSize + '" fill="' + n.pointColor + '" clip-path="url(#cut-off-bottom)" transform="rotate(-90,100,100)" />' + c + '<text class="timer" text-anchor="middle" x="' + g + '" y="' + f + '" style="font-size: ' + n.percentageTextSize + "px; " + void 0 + ";" + n.textAdditionalCss + '" fill="' + n.fontColor + '"><tspan class="number">' + (null == n.replacePercentageByText ? 0 : n.replacePercentageByText) + '</tspan><tspan class="percent">' + (n.noPercentageSign || null != n.replacePercentageByText ? "" : "") + "</tspan></text>"))
            } else a.addClass("svg-container").append(e('<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 194 186" class="circliful">' + i + '<circle cx="100" cy="100" r="57" class="border" fill="' + n.fillColor + '" stroke="' + n.backgroundColor + '" stroke-width="' + u + '" stroke-dasharray="360" transform="rotate(-90,100,100)" /><circle class="circle" cx="100" cy="100" r="57" class="border" fill="none" stroke="' + n.foregroundColor + '" stroke-width="' + n.foregroundBorderWidth + '" stroke-dasharray="0,20000" transform="rotate(-90,100,100)" /><circle cx="100" cy="100" r="' + n.pointSize + '" fill="' + n.pointColor + '" />' + c + '<text class="timer" text-anchor="middle" x="' + g + '" y="' + f + '" style="font-size: ' + n.percentageTextSize + "px; " + void 0 + ";" + n.textAdditionalCss + '" fill="' + n.fontColor + '"><tspan class="number">' + (null == n.replacePercentageByText ? 0 : n.replacePercentageByText) + '</tspan><tspan class="percent">' + (n.noPercentageSign || null != n.replacePercentageByText ? "" : "") + "</tspan></text>"));
            var y = a.find(".circle"),
                p = a.find(".timer"),
                h = 30,
                m = 0,
                C = n.animationStep,
                k = 0,
                w = 0,
                P = 0,
                b = s,
                B = 3.6 * s;
            n.halfCircle && (B = 3.6 * s / 2), null != n.replacePercentageByText && (b = n.replacePercentageByText), n.start > 0 && n.target > 0 && (s = n.start / (n.target / 100), P = n.target / 100), 1 == n.animation ? n.animateInView ? e(t).scroll(function() {
                l()
            }) : r() : (y.attr("stroke-dasharray", B + ", 20000"), 1 == n.showPercent ? p.find(".number").text(b) : (p.find(".number").text(n.target), p.find(".percent").text("")))
        })
    }
}); 